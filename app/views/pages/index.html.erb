
<div class="musicfeedsf-header">
  <div class="container">

    <div class="header-title-wrapper">
      <h1 class="font-artbuzz title" style="font-size:60px;color:white;">MusicFeed<span class="header-text-sf">SF</span></h1>
    </div>
    

    <p class="lead" style="color:white;">Tasty jams &amp; upcoming concerts in the SF Bay Area.</p>

    <div class="nav-tabs-wrapper">
      <ul class="nav nav-tabs">
        <li class="active nav-item"><a class="nav-link" href="#tweets">Tweets</a></li>
        <li class="nav-item"><a class="nav-link" href="#concerts">Concerts</a></li>
        <li class="nav-item"><a class="nav-link" href="#news">News</a></li>
      </ul> 
    </div>
  </div>

</div>


<div class="container main-container main-container-tweets">
  <div class="tweet-container">
    <ul id="tweet-list" class="media-list">
      <% @tweets.each do |tweet| %>
        <%= render :partial => "partials/tweet", :locals => { :tweet => tweet } %>
      <% end %>
      <!-- tweets rendered here as list elements !-->
    </ul>
  </div>
</div>
<div class="container main-container main-container-concerts hide">
  <div class="concerts-container">
    <ul id="concerts-list" class="media-list">
    </ul>
  </div>
</div>

<div class="container main-container main-container-news hide">
  <div class="news-container">
    <ul id="news-list" class="media-list">
      <% @articles.each do |article| %>
        <%= render :partial => "partials/article", :locals => { :article => article } %>
      <% end %>
    </ul>
  </div>
</div>



<script type='text/javascript'>

$(document).ready(function(){

// NAVIGATION
    $(".nav-item").click(function(e){
      var newTypeHref = $(e.target).closest('a').attr('href');
      $(".nav-item").removeClass("active");
      $(e.target).closest('li').addClass("active");


      $(".main-container").addClass('hide');
      $(".main-container-"+newTypeHref.slice(1, newTypeHref.length)).removeClass('hide');
    });

// TWITTER
    $(".text-timeago").each(function(i){
      $(this).text( moment( $(this).data('timestamp') ).fromNow() );
    });

    $(".twitter-text").each(function(i){
        var str = $(this).text();

        str = str
            .replace(/(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gim, '<a href="$1">$1</a>')
            .replace(/\B#([\w-]+)/gm, '<a href="http://search.twitter.com/search?q=$1">#$1</a>')
            .replace(/\B@([\w-]+)/gm, '<a href="http://twitter.com/$1">@$1</a>');
        $(this).html(str);
    });

// EVENTBRITE

// https://www.eventbrite.com/json/event_search?keywords=art&city=San+Francisco&date=This+month&app_key=O65YJFZ6RWFQUE4TA2

    function formatTime( time ){
      var time_string = '';
      var minutes = time.getMinutes();
      var hours = time.getHours();
      var ampm = 'am';
      if( minutes < 10 ){
        minutes = '0' + minutes;
      }
      if( hours === 0 ){
        hours = 12;
      } else if ( hours >= 12 ){
        ampm = 'pm';
        if( hours !== 12){
          hours = hours - 12;
        }
      }
      return time_string += hours + ':' + minutes + ampm;
    }

    function getDate(evnt){
      var not_iso_8601 = /\d\d-\d\d-\d\d \d\d:\d\d:\d\d/;
      var date_string = not_iso_8601.test( evnt.start_date ) ? evnt.start_date.replace(' ', 'T') : evnt.start_date;
      var start_date = new Date( Date.parse( date_string ));
      time_string = Eventbrite.prototype.utils.formatTime( start_date );

      date_string = start_date.toDateString();
      var monthNames = [ "January", "February", "March", "April", "May", "June",
              "July", "August", "September", "October", "November", "December" ];
      month = monthNames[ start_date.getMonth() ];
      
      return { date: date_string, time: time_string, month: month, day: start_date.getDate() } 
    }

    function getVenue(evnt){
      if( evnt.venue !== undefined && evnt.venue.name !== undefined && evnt.venue.name !== ''){ 
          return venue_name = evnt.venue.name;
      }
      else return '';

    }


  function getConcertTpl(cb){
    $.ajax({
      type: 'GET',
      url: '/templates/songkick-concert.html.tpl',
      dataType: 'text',
      success: function(tplStr){ 
        cb(null, tplStr); 
      },
      error: cb
    });
  }

  getConcertTpl(function(err, concertTplStr){

    /*
    Eventbrite({'app_key': "<%= ENV['SONGKICK_API_KEY'] %>" }, function(eb){
      eb.event_search({
        keywords: 'art,gallery,exhibit',
        category: 'entertainment,fundraisers,other,performances,social,tradeshows,fairs',
        city: 'San Francisco',
        within: '5',
        within_unit: 'M',
        date: 'This Month',
        max: '100'
      }, function(res){
            console.log(res);
        res.events.splice(0, 1);
//            $(".events-container").html(eb.utils.eventList( res, eb.utils.eventListRow ));

*/
    /*
        var displayEvents = [];
        $.each( res.events, function(i, obj){
            var event = obj.event;
            var tmpDate = getDate(event);
            event.date = tmpDate.date;
            event.time = tmpDate.time;
            event.day = tmpDate.day;
            event.month = tmpDate.month;
            event.venue_name = getVenue(event);
            console.log(event);
            event.html = _.template( eventTplStr, { event: event });
            displayEvents.push( event );
        });

        var sortedEvents = _.sortBy(displayEvents, function(e){
            return new Date(e.date).getTime();
        });


        var eventAllHtml = _.reduce( sortedEvents, function(memo, val){
            memo += val.html;
            return memo;
        }, '');

        $("#events-list").append(eventAllHtml); 

        // Enable popovers
        $(".event-title").popover();
        $(".event-title").hover(function(evt){
          $(".event-title").not( $(this).closest('.event-title') ).popover('hide');

          $(this).closest('.event-title').popover('show');
        });

        $("body").click(function(){
          $(".event-title").popover('hide');

        });

      });
    });
  });


  */
        
});


// including the following progressive enhancement for ISO 8601 dates - Thanks Colin Snover!
/**
 * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>
 * © 2011 Colin Snover <http://zetafleet.com>
 * Released under MIT license.
 */
(function (Date, undefined) {
  var origParse = Date.parse, numericKeys = [ 1, 4, 5, 6, 7, 10, 11 ];
  Date.parse = function (date) {
    var timestamp, struct, minutesOffset = 0;
    // ES5 §15.9.4.2 states that the string should attempt to be parsed as a Date Time String Format string
    // before falling back to any implementation-specific date parsing, so that’s what we do, even if native
    // implementations could be faster
    //              1 YYYY                2 MM       3 DD           4 HH    5 mm       6 ss        7 msec        8 Z 9 ±    10 tzHH    11 tzmm
    if ((struct = /^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(date))) {
      // avoid NaN timestamps caused by “undefined” values being passed to Date.UTC
      for (var i = 0, k; (k = numericKeys[i]); ++i) {
        struct[k] = +struct[k] || 0;
      }
      // allow undefined days and months
      struct[2] = (+struct[2] || 1) - 1;
      struct[3] = +struct[3] || 1;
      if (struct[8] !== 'Z' && struct[9] !== undefined) {
        minutesOffset = struct[10] * 60 + struct[11];
        if (struct[9] === '+') {
          minutesOffset = 0 - minutesOffset;
        }
      }
      timestamp = Date.UTC(struct[1], struct[2], struct[3], struct[4], struct[5] + minutesOffset, struct[6], struct[7]);
    } else {
      timestamp = origParse ? origParse(date) : NaN;
    }
    return timestamp;
  };
}(Date));

</script>
